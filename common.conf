// Note: the Typesafe Config library is a bit picky with suffixes;
// the common files included via the "include" directive should
// have a ".conf" suffix.

// Each project is prefixed by ${vars.base} { ...
// so that common options or settings can be set by the
// configuration that includes this common file.
//
// Note however that += won't work inside vars.base.
// It's https://github.com/typesafehub/config/issues/160.
// That's why if you override extra.commands you must
// explicitly include default-commands.

vars: {
  scala-ref                    : "scala/scala.git#2.11.x"
  scala-ref                    : ${?scala_ref}   // allow overriding scala-ref using the scala_ref environment variable
  node                         : "node"
  node                         : ${?NODE}

  // TODO: merge required changes upstream to get rid of our forks, maintaining our one won't scale
  browse-ref                   : "SethTisue/browse.git#topic/2.11-compat"
  lift-framework-ref           : "lift/framework.git#3.0-M2-release"
  spray-ref                    : "spray/spray.git#v1.3.3"
  // only building project twirl-api, fixed sha from master branch that has Scala 2.11 compatibility patches merged
  spray-twirl-ref              : "spray/twirl.git#102978cb508684aee0cfa09d71027965cdcd77b4"
  // - fix for matching scalaBinaryVersion that causes issues in dbuild
  // - That has been merged, but master is now unusable in Java 6 due to
  //   the use of typesafe-config 1.3.0
  //   https://github.com/playframework/interplay/commit/73f7c9b434be180c27611aebb089d55f6445bcf5#commitcomment-11275807
  play-twirl-ref               : "playframework/twirl.git#pull/45/head"
  spray-json-ref               : "spray/spray-json.git"
  // fixed sha from 2.10.x branch that has Scala 2.11 compatibility patches merged
  scala-io-ref                 : "adriaanm/scala-io.git#community-build"
  json4s-ref                   : "json4s/json4s.git#v3.2.10_2.11"
  playframework-ref            : "playframework/playframework.git#2.4.x"
  // fixed sha from master that has Scala 2.11 patches merged
  parboiled-ref                : "sirthias/parboiled.git#c53e650212f222c9b1f75fa1ab13d7cab9db164e"
  // This pull request supports the fully-cross-versioned continuations plugin, shipped with 2.11+
  scala-arm-ref                : "jsuereth/scala-arm.git#pull/31/head"
  genjavadoc-ref               : "typesafehub/genjavadoc.git#v0.5_2.11.0-M8"
  // There's no suitable release yet, so we depend on this commit. Upgrade to the next tagged version once released
  scala-refactoring-ref        : "scala-ide/scala-refactoring.git#44dca8b74808528693f884cfd3c5c9d3ed13e519"
  // "release-0.7" is a stable branch, used to cut 0.7 against new Scala milestones at this time
  scala-stm-ref                : "nbronson/scala-stm.git#release-0.7"
  scalacheck-ref               : "rickynils/scalacheck.git#1.11.6"
  scalatest-ref                : "scalatest/scalatest.git#2.2.3-and-greater"
  // zeromq-scala-binding's master includes this fix (and others), which break akka-zeromq (?):
  // https://github.com/valotrading/zeromq-scala-binding/commit/c2a8a87673a1a3468486d1af9a6460bfed25c7a2
  // therefore (which has a broken libdep of scalatest, however (cross full)):
  zeromq-scala-binding-ref     : "valotrading/zeromq-scala-binding.git#062e9438e322ec29d75b9649cb2aafa6ba3198a6"
  // fixed sha/tag (a compromise), the sha points at master that supports Scala 2.11
  spire-ref                    : "non/spire.git#3d2a41e91a1f6946fac63660f6157d4a6e4a281d"
  // temporarily frozen at a commit just before 546f0453 which introduced the
  // use of CrossVersion.patch; see https://github.com/scala/community-builds/issues/384
  shapeless-ref                : "milessabin/shapeless.git#eec3d55d1840a2ab31efedc9f8badefd6a49f5f9"
  scoverage-ref                : "scoverage/scalac-scoverage-plugin.git#1.0.2"
  // change from https://github.com/sbt/sbt/pull/1509 broke building sbt with Scala 2.11
  // this problem is tracked in https://github.com/sbt/sbt/issues/1523
  // for now, we stick to fixed sha1 of sbt right before the merge of #1509
  sbt-ref                      : "sbt/sbt.git#0b2f2ae5a8ab2b082b6e15b196d671a4c18cc9f2"
  // this is commit corresponding to 1.3.0 release, unfortunely pimpathon doesn't tag its releases
  pimpathon-ref                : "stacycurl/pimpathon.git#d2354dd92f5481610f4610edba3574880b07263e"
  sbt-testng-interface-ref     : "scalacommunitybuild/sbt-testng.git#community-build-2.12"
  utest-ref                    : "lihaoyi/utest.git"
  acyclic-ref                  : "lihaoyi/acyclic.git"
  sourcecode-ref               : "lihaoyi/sourcecode.git"
  fastparse-ref                : "SethTisue/fastparse.git#no-coursier"  // disable sbt-coursier plugin; https://github.com/scala/community-builds/issues/294
  breeze-ref                   : "scalanlp/breeze.git#releases/v0.12"
  // we don't plan to ship a newer plugin in any future 2.11.x version, and recent
  // changes on master were causing failures, so let's just freeze at the bundled version
  scala-continuations-ref      : "scala/scala-continuations.git#v1.0.2"

  // tracking upstream (the ideal)
  akka-ref                     : "akka/akka.git#release-2.3"
  async-ref                    : "scala/async.git"
  scala-parser-combinators-ref : "scala/scala-parser-combinators.git"
  scala-partest-ref            : "scala/scala-partest.git#1.0.x"
  scala-partest-interface-ref  : "scala/scala-partest-interface.git"
  scala-xml-ref                : "scala/scala-xml.git#121034f"
  scala-swing-ref              : "scala/scala-swing.git#2.0.x"
  scala-records-ref            : "scala-records/scala-records.git"
  twitter-util-ref             : "twitter/util.git#302235a473d20735e5327d785e19b0f489b4a59f"  // freeze at November 2016 commit before move to ScalaTest 3.0
  // freeze before December 2016 commit that requires newer json4s (which we have frozen)
  jawn-ref                     : "non/jawn.git#8534fafa1d8d6930f1187aa1217b2c309b387017"
  mima-ref                     : "typesafehub/migration-manager.git"
  macro-paradise-ref           : "scalamacros/paradise.git#2.11.11"
  // temporarily frozen at a commit just before the one that introduced the
  // use of CrossVersion.patch; see https://github.com/scala/community-builds/issues/384
  macro-compat-ref             : "milessabin/macro-compat.git#2a857e42f48620c34900e421579404d290286a75"

  // TODO move back to master after adding scalaz-stream to the community build.
  // the fork was necessary because Specs 2.4 uses Shapeless 2.0.0 but we want
  // to be on 2.2.x, and we hit a small source incompatibility.
  specs2-ref                   : "SethTisue/specs2.git#specs-24-compat-w-shapeless-22"

  // frozen at November 2016 commit; see https://github.com/scala/community-builds/issues/480
  zinc-ref                     : "typesafehub/zinc.git#e6e2a9929fbbf3b986f530aeb4a160a6f62918b3"
  sbinary-ref                  : "harrah/sbinary.git"

  // TODO move back to master; see https://github.com/scala/community-builds/issues/234
  // for details
  sbt-republish-ref            : "typesafehub/sbt-republish.git#9f7109c705175c6d8e7e99c60e53959f9e4c5df0"

  scalaz-ref                   : "scalaz/scalaz.git#series/7.1.x"
  scodec-bits-ref              : "scodec/scodec-bits.git#series/1.0.x"
  discipline-ref               : "typelevel/discipline.git#v0.2"
  // frozen at April 2017 commit to avoid breaking utest.
  // reported upstream at https://github.com/lihaoyi/utest/issues/108
  scala-js-ref                 : "scala-js/scala-js.git#d6e876381a61f58f122fad0232de53a0b499b720"
  // freeze at March 2017 commit, before Ornate was added, which caused a failure
  // (https://github.com/scala/community-builds/issues/513). we could backport a fix
  // but 2.11 is nearly moribund these days so let's just freeze.
  slick-ref                    : "slick/slick.git#46eec4a099f6fbf869a75ed95b8cfd171e2490b0"
  scalamock-ref                : "paulbutcher/scalamock.git#cf8aa67cf163682cd52cbb4339e118da47703ae3" // stay here; master wants ScalaTest 3.0
  scalariform-ref              : "daniel-trinh/scalariform.git"

  // master depends on Akka HTTP and Akka Stream, which are tricky to depend on
  // (they are built only a special branch). so freeze right over the dependency was added.
  ensime-ref                   : "ensime/ensime-server.git#f4de40f6ce93afa75fd5bbe153c5f1df73035b1a"

  // master uses Shapeless 2.3 only features, so at this time it doesn't make sense to
  // track. there is no other branch we can track, so we use a version tag.  at time of
  // writing (Oct 2015) 1.1.0 is both the latest released version and the version that
  // Ensime depends on.  and Ensime is the main reason we're adding this at all
  spray-json-shapeless-ref     : "fommil/spray-json-shapeless.git#v1.1.0"

  // freeze at an October 2016 commit; subsequent commits use ScalaTest 3.0, which we don't
  // have here
  scala-gopher-ref             : "rssh/scala-gopher.git#861934ae29eda56e592f5208962fde053fc7fa7a"

  // version settings
  sbt-version                  : "0.13.15"
}

vars {
  scalac-opts                  : ""
  scalac-opts                  : ${?scalac_opts}   // allows additional compiler options using the scalac_opts environment
  default-commands             : []
}

// appendScalacOptions and removeScalacOptions
// let us work around https://github.com/typesafehub/dbuild/issues/144
vars.default-commands += """
set commands ++= {
  def alterScalacOptions(s: State, fn: Seq[String] => Seq[String]): State = {
    val extracted = Project extract s
    import extracted._
    val r = Project.relation(extracted.structure, true)
    val allDefs = r._1s.toSeq
    val projectScope = Load.projectScope(currentRef)
    val scopes = allDefs.filter(_.key == scalacOptions.key).map(_.scope).distinct
    val redefined = scopes.map(scope => scalacOptions in scope <<= (scalacOptions in scope).map(fn))
    val session = extracted.session.appendRaw(redefined)
    BuiltinCommands.reapply(session, structure, s)
  }
  def appendScalacOptions(s: State, args: Seq[String]) = {
    def appendDistinct[A](x: Seq[A], y: Seq[A]) =
      x.filterNot(y.contains) ++ y
    alterScalacOptions(s, appendDistinct(_, args))
  }
  def removeScalacOptions(s: State, args: Seq[String]) =
    alterScalacOptions(s, _.filterNot(args.contains))
  Seq(
    Command.args("appendScalacOptions", "<option>")(appendScalacOptions),
    Command.args("removeScalacOptions", "<option>")(removeScalacOptions))
}
"""
vars.default-commands += "appendScalacOptions "${vars.scalac-opts}
vars.base.extra.commands = ${vars.default-commands}

vars.ivyPat: ", [organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]"
options.resolvers: {
  01: "local"
  02: "dbuild: https://scala-ci.typesafe.com/artifactory/dbuild/"
  03: "dbuild-ivy: https://scala-ci.typesafe.com/artifactory/dbuild-ivy/"${vars.ivyPat}
  04: "dbuild-unchecked: https://scala-ci.typesafe.com/artifactory/dbuild-unchecked/" // for sbt plugins not available on ivy (they'll fail the pom check on the `dbuild` cache repo above)
}

// we don't have enough disk space to keep stuff longer
options.cleanup: {
  extraction: {
    success: 96
    failure: 120
  }
  build: {
    success: 96
    failure: 120
  }
}

build += {
  check-missing: [ true, false ]
  cross-version: [ disabled, standard ]
  space.from: [ default ]
  space.to: default
  extraction-version: "2.11.7"
  sbt-version: ${vars.sbt-version}

  projects: []
}
